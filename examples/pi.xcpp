#if !defined(__XCPP__)
#define __XCPP__ 0
#elif defined(__XCPP__)
#pragma once
#else
. xcpp.sh run "$0" "$@"
#endif

sz obtainIterations( void )
{
	int iters{ 0 };
	do
	{
		print( "How many iterations to approximate pi? " );
	}
	while( !read( iters ) || iters <= 0 );
	return (sz)iters;
}

// Gregory-Leibniz Series: https://en.wikipedia.org/wiki/Leibniz_formula_for_%CF%80
int pi( strings args )
{
	const sz iterations{ obtainIterations() };
	f64 piValue{ 0 };
	int denominator{ 1 };
	int sign{ 1 };
	for( sz i{ 0 }; i < iterations; ++i, denominator += 2, sign = -sign )
	{
		piValue += 4 * sign * (1.0 / denominator);
		println(piValue);
	}
	return 0;
}
